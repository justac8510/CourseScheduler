
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String currentStudentID;
    private String project;
    private String author;

    
    public MainFrame() {
        initComponents();
        ScheduleQueries.initScheduleList();//get all schedule that has been previously added into the database
        rebuildSemesterComboBoxes();
        rebuildCourseComboxes();
        rebuildStudentComboxes();
        checkData();
        
    }
    

    public void rebuildSemesterComboBoxes()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboxes(){
        ArrayList<CourseEntry> courses = CourseQueries.getCourses();
        ArrayList<String> courseCodes = new ArrayList<String>();
        
        for (CourseEntry course: courses){
            courseCodes.add(course.getCourseCode());
        }
        
        SelectCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        DisplayCourseListsOfStudnetsJCBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        AdminDropCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
    }
    
    public void rebuildStudentCourseComboxes(){
        ArrayList<String> courseCodes = new ArrayList<String>();
        String student = (String)currentStudentJCBox.getSelectedItem();
        
        for(ScheduleEntry schedule: ScheduleQueries.scheduleList){
            if(schedule.getStudentID().equals(student) && schedule.getSemester().equals(currentSemester)){
                courseCodes.add(schedule.getCourseID());
            }
        }
        
        StudentDropCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        
        
    }
    
    public void rebuildStudentComboxes(){
        ArrayList<StudentEntry> students = StudentQueries.getStudents();
        ArrayList<String> studentIDs = new ArrayList<String>();
        
        for (StudentEntry student: students){
            studentIDs.add((student.getID()));
        }
        
        currentStudentJCBox.setModel(new javax.swing.DefaultComboBoxModel(studentIDs.toArray()));
        AdminDropStudentJCBox.setModel(new javax.swing.DefaultComboBoxModel(studentIDs.toArray()));
        
        if (studentIDs.size() > 0)
        {
            currentStudentTitle.setText(studentIDs.get(0));
            currentStudentID = studentIDs.get(0);
        }
        else
        {
            currentStudentTitle.setText("None, add a student.");
            currentStudentID = "None";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        SelectCourseTitle = new javax.swing.JLabel();
        SelectCourseJCBox = new javax.swing.JComboBox<>();
        ScheduleCourseStatus = new javax.swing.JLabel();
        ScheduleCourseButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayScheduleTable = new javax.swing.JTable();
        DisplayScheduleButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DisplayCourseTable = new javax.swing.JTable();
        DisplayCourseButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        SelectCourseTitle1 = new javax.swing.JLabel();
        StudentDropCourseJCBox = new javax.swing.JComboBox<>();
        StudentDropCourseBton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        StudentDropCourseTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        currentStudentTitle = new javax.swing.JLabel();
        currentStudentJCBox = new javax.swing.JComboBox<>();
        changeStudentBton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        CourseCodeTitle = new javax.swing.JLabel();
        CourseDescTitle = new javax.swing.JLabel();
        CourseSeatTitle = new javax.swing.JLabel();
        CourseCodeField = new javax.swing.JTextField();
        CourseDescField = new javax.swing.JTextField();
        CourseSeatSpinner = new javax.swing.JSpinner();
        CourseSubmitButton = new javax.swing.JButton();
        AddCourseStatus = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        StudentIDTitle = new javax.swing.JLabel();
        StudentFNameTitle = new javax.swing.JLabel();
        StudentIDField = new javax.swing.JTextField();
        StudentFirstNameField = new javax.swing.JTextField();
        StudentLastNameField = new javax.swing.JTextField();
        StudentLNameTitle = new javax.swing.JLabel();
        AddStudentButton = new javax.swing.JButton();
        AddStudentStatus = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        AdminDisplayCourseofStudentsTitle = new javax.swing.JLabel();
        DisplayCourseListsOfStudnetsJCBox = new javax.swing.JComboBox<>();
        DisplayCourseListOfStundetsBton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ScheduledStudnetsTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        WaitlistedStudentsTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        AdminDropStudentBton = new javax.swing.JButton();
        AdminDropStudentJCBox = new javax.swing.JComboBox<>();
        SelectCourseTitle3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DropStudentTextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        AdminDropCourseJCBox = new javax.swing.JComboBox<>();
        AdminDropCourseBton = new javax.swing.JButton();
        SelectCourseTitle4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        DropCourseTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        AboutBton = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        SelectCourseTitle.setText("Select Course: ");

        SelectCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ScheduleCourseStatus.setText("   ");

        ScheduleCourseButton.setText("Submit");
        ScheduleCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScheduleCourseStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(SelectCourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SelectCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(ScheduleCourseButton)))
                        .addGap(0, 536, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectCourseTitle)
                    .addComponent(SelectCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScheduleCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScheduleCourseStatus)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Course", jPanel6);

        DisplayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CourseCode", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DisplayScheduleTable);

        DisplayScheduleButton.setText("Display");
        DisplayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(DisplayScheduleButton)
                .addContainerGap(333, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(DisplayScheduleButton)
                .addGap(28, 28, 28))
        );

        jTabbedPane3.addTab("Display Schedule", jPanel7);

        DisplayCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CourseCode", "Seat", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(DisplayCourseTable);

        DisplayCourseButton.setText("Display");
        DisplayCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(364, 364, 364)
                .addComponent(DisplayCourseButton)
                .addContainerGap(327, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DisplayCourseButton)
                .addGap(28, 28, 28))
        );

        jTabbedPane3.addTab("Display Coruse", jPanel8);

        SelectCourseTitle1.setText("Select Course: ");

        StudentDropCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        StudentDropCourseBton.setText("Drop Course");
        StudentDropCourseBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDropCourseBtonActionPerformed(evt);
            }
        });

        StudentDropCourseTextArea.setColumns(20);
        StudentDropCourseTextArea.setRows(5);
        jScrollPane7.setViewportView(StudentDropCourseTextArea);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(StudentDropCourseBton)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(SelectCourseTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(StudentDropCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(423, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectCourseTitle1)
                    .addComponent(StudentDropCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(StudentDropCourseBton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", jPanel9);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel4.setText("Current Student: ");

        currentStudentTitle.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentStudentTitle.setText("           ");

        currentStudentJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentStudentJCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentStudentJCBoxActionPerformed(evt);
            }
        });

        changeStudentBton.setText("Change Student");
        changeStudentBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStudentBtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentStudentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(currentStudentJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(changeStudentBton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(currentStudentTitle)
                        .addComponent(currentStudentJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(changeStudentBton))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        CourseCodeTitle.setText("Course Code: ");

        CourseDescTitle.setText("Course Description: ");

        CourseSeatTitle.setText("Course Seat: ");

        CourseCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseCodeFieldActionPerformed(evt);
            }
        });

        CourseDescField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseDescFieldActionPerformed(evt);
            }
        });

        CourseSubmitButton.setText("Submit");
        CourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseSubmitButtonActionPerformed(evt);
            }
        });

        AddCourseStatus.setText("   ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CourseSubmitButton))
                    .addComponent(AddCourseStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CourseCodeTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CourseDescTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CourseSeatTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(CourseDescField, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addComponent(CourseCodeField))
                            .addComponent(CourseSeatSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(468, 468, 468))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseCodeTitle)
                    .addComponent(CourseCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseDescTitle)
                    .addComponent(CourseDescField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseSeatTitle)
                    .addComponent(CourseSeatSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(CourseSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddCourseStatus)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        StudentIDTitle.setText("Student ID: ");

        StudentFNameTitle.setText("First Name: ");

        StudentIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentIDFieldActionPerformed(evt);
            }
        });

        StudentFirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentFirstNameFieldActionPerformed(evt);
            }
        });

        StudentLastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentLastNameFieldActionPerformed(evt);
            }
        });

        StudentLNameTitle.setText("Last Name: ");

        AddStudentButton.setText("Submit");
        AddStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStudentButtonActionPerformed(evt);
            }
        });

        AddStudentStatus.setText("   ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AddStudentStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StudentLNameTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StudentIDTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(StudentFNameTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StudentFirstNameField)
                            .addComponent(StudentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StudentLastNameField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(AddStudentButton)))))
                .addGap(419, 419, 419))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudentIDTitle)
                    .addComponent(StudentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentFNameTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudentLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentLNameTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddStudentStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", jPanel5);

        AdminDisplayCourseofStudentsTitle.setText("Select Course: ");

        DisplayCourseListsOfStudnetsJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DisplayCourseListOfStundetsBton.setText("Display");
        DisplayCourseListOfStundetsBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayCourseListOfStundetsBtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Scheduled Students");

        ScheduledStudnetsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ScheduledStudnetsTable);

        jLabel7.setText("Waitlisted Students");

        WaitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(WaitlistedStudentsTable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 77, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(AdminDisplayCourseofStudentsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DisplayCourseListsOfStudnetsJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(DisplayCourseListOfStundetsBton)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AdminDisplayCourseofStudentsTitle)
                            .addComponent(DisplayCourseListsOfStudnetsJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DisplayCourseListOfStundetsBton))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel10);

        AdminDropStudentBton.setText("Drop Student");
        AdminDropStudentBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminDropStudentBtonActionPerformed(evt);
            }
        });

        AdminDropStudentJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SelectCourseTitle3.setText("Select Student: ");

        DropStudentTextArea.setColumns(20);
        DropStudentTextArea.setRows(5);
        jScrollPane4.setViewportView(DropStudentTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(SelectCourseTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdminDropStudentJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(AdminDropStudentBton)))
                .addContainerGap(398, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectCourseTitle3)
                    .addComponent(AdminDropStudentJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdminDropStudentBton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel11);

        AdminDropCourseJCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        AdminDropCourseBton.setText("Drop Course");
        AdminDropCourseBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminDropCourseBtonActionPerformed(evt);
            }
        });

        SelectCourseTitle4.setText("Select Course: ");

        DropCourseTextArea.setColumns(20);
        DropCourseTextArea.setRows(5);
        jScrollPane6.setViewportView(DropCourseTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(SelectCourseTitle4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdminDropCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(AdminDropCourseBton)))
                .addContainerGap(403, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectCourseTitle4)
                    .addComponent(AdminDropCourseJCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdminDropCourseBton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        AboutBton.setText("About");
        AboutBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutBtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeSemesterButton)
                                .addGap(18, 18, 18)
                                .addComponent(AboutBton)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(AboutBton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void CourseCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseCodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CourseCodeFieldActionPerformed

    private void CourseDescFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseDescFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CourseDescFieldActionPerformed

    private void StudentIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StudentIDFieldActionPerformed

    private void StudentFirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentFirstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StudentFirstNameFieldActionPerformed

    private void StudentLastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentLastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StudentLastNameFieldActionPerformed

    private void DisplayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayScheduleButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel scheduleTable = (DefaultTableModel)DisplayScheduleTable.getModel();
        scheduleTable.setRowCount(0);
        String studentID = currentStudentID;
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        //System.out.print(studentSchedule);
        
        for(ScheduleEntry schedule: studentSchedule){
            System.out.println(schedule.getStudentID());
            System.out.println(schedule.getStatus());
            if (schedule.getStatus().equals("S")){
                scheduleTable.addRow(new Object[]{schedule.getCourseID(),"Scheduled"});
            }else{
                scheduleTable.addRow(new Object[]{schedule.getCourseID(),"Waitlisted"});
            }
        }
        
        
    }//GEN-LAST:event_DisplayScheduleButtonActionPerformed

    private void DisplayCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayCourseButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel courseTable = (DefaultTableModel)DisplayCourseTable.getModel();
        courseTable.setRowCount(0);
        ArrayList<CourseEntry> courses = CourseQueries.getCourses();
        
        for(CourseEntry course: courses){
            courseTable.addRow(new Object[]{course.getCourseCode(), course.getSeats(), course.getDescription()});
        }
    }//GEN-LAST:event_DisplayCourseButtonActionPerformed

    private void CourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        int numOfSeats = (int) CourseSeatSpinner.getValue();
        String courseID = CourseCodeField.getText();
        String courseDescription = CourseDescField.getText();
        
        if (numOfSeats > 0 && !(currentSemester.equals("None"))){
            CourseQueries.addCourse(new CourseEntry(currentSemester, courseID, courseDescription, numOfSeats));
            AddCourseStatus.setText(String.format("%s has been sucessfully added", courseID));
        }else{
            AddCourseStatus.setText(String.format("Courses added failed"));
        }
        
        rebuildCourseComboxes();
    }//GEN-LAST:event_CourseSubmitButtonActionPerformed

    private void AddStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStudentButtonActionPerformed
        // TODO add your handling code here:
        String studentID = StudentIDField.getText();
        String lastName = StudentLastNameField.getText();
        String firstName = StudentFirstNameField.getText();
        
        if (!(currentSemester.equals("None"))){
            StudentQueries.addStudent(new StudentEntry(studentID, firstName, lastName));
            AddStudentStatus.setText(String.format("%s %s has been sucessfully added", firstName, lastName));
        }else{
            AddStudentStatus.setText("Students added failed");
        }
        
        rebuildStudentComboxes();
    }//GEN-LAST:event_AddStudentButtonActionPerformed

    private void ScheduleCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleCourseButtonActionPerformed
        // TODO add your handling code here:
        String studentID = currentStudentID;
        String courseCode = (String) SelectCourseJCBox.getSelectedItem();
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime()); 
        
        StudentEntry student = StudentQueries.getStudentByID(studentID);
        CourseEntry course = CourseQueries.getCourseByCode(courseCode);
        int numOfSeatRemain = CourseQueries.getRemainSeats(courseCode);
        
        
        if (!(currentSemester.equals("None")) && numOfSeatRemain > 0){
            ScheduleQueries.addSchedule(new ScheduleEntry(currentSemester, student.getID(), course.getCourseCode(), "S",  currentTimestamp));
            ScheduleCourseStatus.setText(String.format("%s %s has been successfully added to %s", student.getFirstName(), student.getLastName(), course.getCourseCode()));
            CourseQueries.setSeats(-1, courseCode);
        }else if(!(currentSemester.equals("None")) && numOfSeatRemain == 0){
            ScheduleQueries.addSchedule(new ScheduleEntry(currentSemester, student.getID(), course.getCourseCode(), "W",  currentTimestamp));
            ScheduleCourseStatus.setText(String.format("%s %s has been sccessfully waitlisted to %s", student.getFirstName(), student.getLastName(), course.getCourseCode()));
        }else{
            ScheduleCourseStatus.setText("Schedule added failed");
        }
        
        
        
        
        
        
    }//GEN-LAST:event_ScheduleCourseButtonActionPerformed

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = (String) currentSemesterComboBox.getSelectedItem();
        currentSemesterLabel.setText(currentSemester);
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void currentStudentJCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentStudentJCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentStudentJCBoxActionPerformed

    private void changeStudentBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStudentBtonActionPerformed
        // TODO add your handling code here:
        currentStudentID = (String) currentStudentJCBox.getSelectedItem();
        currentStudentTitle.setText(currentStudentID);
    }//GEN-LAST:event_changeStudentBtonActionPerformed

    private void StudentDropCourseBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDropCourseBtonActionPerformed
        // TODO add your handling code here:
        String courseCode = (String)StudentDropCourseJCBox.getSelectedItem();
        String studentID = (String)currentStudentJCBox.getSelectedItem();
        String output = "";
        ArrayList<String> allSemester = SemesterQueries.getSemesterList();
        ArrayList<ScheduleEntry> scheduleByCourse = ScheduleQueries.getScheduleByCourse(courseCode);
        
        ScheduleQueries.DropScheduleByCourse(courseCode);
        CourseQueries.DropCourse(courseCode);
        output += String.format("%s has been dropped from a list of courses\n\n", courseCode);
        
        for (String semester: allSemester){
            String temp = "";
            for (ScheduleEntry schedule: scheduleByCourse){
                if(schedule.getSemester().equals(semester) && schedule.getStudentID().equals(studentID)){
                    if(schedule.getStatus().equals("S")){
                        StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                        temp += String.format("%s, %s %s has been dropped from %s", student.getFirstName(), student.getLastName(), student.getID(), schedule.getCourseID());
                    }else{
                        StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                        temp += String.format("%s, %s %s has been removed from the waitlist for %s", student.getFirstName(), student.getLastName(), student.getID(), schedule.getCourseID());
                    }
                }
            }
            
            if(!temp.equals("")){
                output += String.format("For %s:\n", semester);
                output += temp + "\n";
            }
        }
        
        StudentDropCourseTextArea.setText(output);
        
    }//GEN-LAST:event_StudentDropCourseBtonActionPerformed

    private void DisplayCourseListOfStundetsBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayCourseListOfStundetsBtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel scheduledStudentTable = (DefaultTableModel)ScheduledStudnetsTable.getModel();
        DefaultTableModel waitlistedStudentTable = (DefaultTableModel)WaitlistedStudentsTable.getModel();
        
        scheduledStudentTable.setRowCount(0);
        waitlistedStudentTable.setRowCount(0);
        
        ArrayList<ScheduleEntry> schedules = ScheduleQueries.getScheduleList();
        
        for(ScheduleEntry schedule: schedules){
            if (schedule.getStatus().equals("W")){
                StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                waitlistedStudentTable.addRow(new Object[]{student.getFirstName(),student.getLastName(),student.getID()});
            }else{
                StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                scheduledStudentTable.addRow(new Object[]{student.getFirstName(),student.getLastName(),student.getID()});
            }
        }
        
    }//GEN-LAST:event_DisplayCourseListOfStundetsBtonActionPerformed

    private void AdminDropStudentBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminDropStudentBtonActionPerformed
        // TODO add your handling code here:
        String studentID = (String) AdminDropStudentJCBox.getSelectedItem();
        StudentEntry deletedStudent = StudentQueries.getStudentByID(studentID);
        String output = "";
        ArrayList<String> allSemester = SemesterQueries.getSemesterList();
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(studentID);
        
        ScheduleQueries.DropScheduleByStudent(studentID);
        StudentQueries.DropStudent(studentID);
        output += String.format("%s, %s %s has been dropped from a list of students\n\n", 
                deletedStudent.getFirstName(), 
                deletedStudent.getLastName(), 
                deletedStudent.getID());
        
        for (String semester: allSemester){
            String temp = "";
            for (ScheduleEntry schedule: studentSchedule){
                ScheduleEntry max = null;
                
                if(schedule.getSemester().equals(semester)){
                    CourseQueries.setSeats(1, schedule.getCourseID());
                    
                    for(ScheduleEntry otherSchedule: ScheduleQueries.scheduleList){
                        if(otherSchedule.getSemester().equals(semester) && otherSchedule.getCourseID().equals(schedule.getCourseID())){
                            if(max == null){
                                max = otherSchedule;
                            }else{
                                if(max.getTimestamp().compareTo(otherSchedule.getTimestamp()) > 0){
                                    max = otherSchedule;
                                }
                            }
                        }
                    }
                    
                    if (!(max == null)){
                        StudentEntry selectedStudent = StudentQueries.getStudentByID(max.getStudentID());
                        
                        if(schedule.getStatus().equals("S")){
                            temp += String.format("%s, %s %s has been dropped from %s\n", 
                            deletedStudent.getFirstName(), 
                            deletedStudent.getLastName(), 
                            deletedStudent.getID(), schedule.getCourseID());
                        }else{
                            temp += String.format("%s, %s %s has been removed from the waitlist for %s\n", 
                            deletedStudent.getFirstName(), 
                            deletedStudent.getLastName(), 
                            deletedStudent.getID(), schedule.getCourseID());
                        }
                        
                        ScheduleQueries.setStudentEnrollStatus(selectedStudent.getID());
                        CourseQueries.setSeats(1, max.getCourseID());
                        
                        temp += String.format("%s, %s %s has been scheduled into %s\n", 
                                selectedStudent.getFirstName(), 
                                selectedStudent.getLastName(), 
                                selectedStudent.getID(), 
                                schedule.getCourseID());
                    }
                    
                }
            }
            
            if (!temp.equals("")){
                output += String.format("For %s\n", semester);
                output += temp + "\n";
            }
            
            DropStudentTextArea.setText(output);
            rebuildStudentComboxes();
        }
    }//GEN-LAST:event_AdminDropStudentBtonActionPerformed

    private void AdminDropCourseBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminDropCourseBtonActionPerformed
        // TODO add your handling code here:
        String courseCode = (String)AdminDropCourseJCBox.getSelectedItem();
        String output = "";
        ArrayList<String> allSemester = SemesterQueries.getSemesterList();
        ArrayList<ScheduleEntry> scheduleByCourse = ScheduleQueries.getScheduleByCourse(courseCode);
        
        ScheduleQueries.DropScheduleByCourse(courseCode);
        CourseQueries.DropCourse(courseCode);
        output += String.format("%s has been dropped from a list of courses\n\n", courseCode);
        
        for (String semester: allSemester){
            String temp = "";
            for (ScheduleEntry schedule: scheduleByCourse){
                if(schedule.getSemester().equals(semester)){
                    if(schedule.getStatus().equals("S")){
                        StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                        temp += String.format("%s, %s %s has been dropped from %s", student.getFirstName(), student.getLastName(), student.getID(), schedule.getCourseID());
                    }else{
                        StudentEntry student = StudentQueries.getStudentByID(schedule.getStudentID());
                        temp += String.format("%s, %s %s has been removed from the waitlist for %s", student.getFirstName(), student.getLastName(), student.getID(), schedule.getCourseID());
                    }
                }
            }
            
            if(!temp.equals("")){
                output += String.format("For %s:\n", semester);
                output += temp + "\n";
            }
        }
        
        DropCourseTextArea.setText(output);
        
        
        
    }//GEN-LAST:event_AdminDropCourseBtonActionPerformed

    private void AboutBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutBtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_AboutBtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);
            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutBton;
    private javax.swing.JLabel AddCourseStatus;
    private javax.swing.JButton AddStudentButton;
    private javax.swing.JLabel AddStudentStatus;
    private javax.swing.JLabel AdminDisplayCourseofStudentsTitle;
    private javax.swing.JButton AdminDropCourseBton;
    private javax.swing.JComboBox<String> AdminDropCourseJCBox;
    private javax.swing.JButton AdminDropStudentBton;
    private javax.swing.JComboBox<String> AdminDropStudentJCBox;
    private javax.swing.JTextField CourseCodeField;
    private javax.swing.JLabel CourseCodeTitle;
    private javax.swing.JTextField CourseDescField;
    private javax.swing.JLabel CourseDescTitle;
    private javax.swing.JSpinner CourseSeatSpinner;
    private javax.swing.JLabel CourseSeatTitle;
    private javax.swing.JButton CourseSubmitButton;
    private javax.swing.JButton DisplayCourseButton;
    private javax.swing.JButton DisplayCourseListOfStundetsBton;
    private javax.swing.JComboBox<String> DisplayCourseListsOfStudnetsJCBox;
    private javax.swing.JTable DisplayCourseTable;
    private javax.swing.JButton DisplayScheduleButton;
    private javax.swing.JTable DisplayScheduleTable;
    private javax.swing.JTextArea DropCourseTextArea;
    private javax.swing.JTextArea DropStudentTextArea;
    private javax.swing.JButton ScheduleCourseButton;
    private javax.swing.JLabel ScheduleCourseStatus;
    private javax.swing.JTable ScheduledStudnetsTable;
    private javax.swing.JComboBox<String> SelectCourseJCBox;
    private javax.swing.JLabel SelectCourseTitle;
    private javax.swing.JLabel SelectCourseTitle1;
    private javax.swing.JLabel SelectCourseTitle3;
    private javax.swing.JLabel SelectCourseTitle4;
    private javax.swing.JButton StudentDropCourseBton;
    private javax.swing.JComboBox<String> StudentDropCourseJCBox;
    private javax.swing.JTextArea StudentDropCourseTextArea;
    private javax.swing.JLabel StudentFNameTitle;
    private javax.swing.JTextField StudentFirstNameField;
    private javax.swing.JTextField StudentIDField;
    private javax.swing.JLabel StudentIDTitle;
    private javax.swing.JLabel StudentLNameTitle;
    private javax.swing.JTextField StudentLastNameField;
    private javax.swing.JTable WaitlistedStudentsTable;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JButton changeStudentBton;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> currentStudentJCBox;
    private javax.swing.JLabel currentStudentTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
